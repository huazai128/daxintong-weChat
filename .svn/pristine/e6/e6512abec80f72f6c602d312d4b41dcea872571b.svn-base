import React, { Component } from 'react';
import styles from './style.scss';
import { SubViewLink } from 'app/components/subViewLink/subViewLink';
import Footer from 'components/Footer/footer';
import { setStore, removeStore, getStore } from 'utils/store';
import { urlAPi } from 'service/api';
import { observer, inject } from 'mobx-react';
import { hashHistory } from 'react-router';
import { Toast } from 'antd-mobile';

let wx = window.wx;

@inject('home')
@observer
class TabBarExample extends React.Component {
	constructor(props) {
		super(props);
		this.state = {
			isShow: false
		};
		this.store = this.props.home;
	}
	componentDidMount() {
		let query = this.props.location.query;
		if (query.page) {
			hashHistory.push(`/${query.page}/${query.id}`);
			return false;
		}else{
			setTimeout(() => {
				this.setState({
					isShow: true
				});
			}, 1000);
		}
		this.newWork();
	}
	componentWillReceiveProps() {
		this.newWork();
	}
	newWork = () => {
		wx.ready(() => {
			wx.getNetworkType({
				success: function (res) {
					let networkType = res.networkType; // 返回网络类型2g，3g，4g，wifi
					if (Object.is(networkType, 'none')) {
						Toast.info('暂无网络', 2);
					}
				}
			});
		});
	}
	render() {
		let pathname = [];
		this.props.routes.forEach(item => {
			if (item.path) {
				pathname.push(item.path.split('/')[1]);
			}
		});
		pathname = pathname.join('/');
		const { isShow } = this.state;
		return (
			<div className="flex-col" style={{ height: '100%', width: '100%' }}>
				{isShow && (
					<div className="flex-col" id="main">
						<div className="flex-g-1 content">
							{this.props.children}
						</div>
						{this.store.isFooter && <Footer pathname={pathname} ref="footer" />}
					</div>
				)}
			</div>

		);
	}
}
export default TabBarExample;

